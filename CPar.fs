// Implementation file for parser generated by fsyacc
module CPar
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Text.Lexing
open FSharp.Text.Parsing.ParseHelpers
# 1 "CPar.fsy"

(*	File MicroC/CPar.fsy 
	Parser specification for micro-C, a small imperative language
	sestoft@itu.dk * 2009-09-29
	No (real) shift/reduce conflicts thanks to Niels Kokholm.
*)
open Absyn

// Vardesc 返回的是一个 元组 (g,s)
// g是类型构造函数，s是变量名
// compose1 函数 取出 类型构造子 g，用类型复合机制构造类型。

let compose1 f (g, s) = ((fun x -> g(f(x))), s)
let nl = CstI 10 //  \n 的 ASCII 码

# 22 "CPar.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | EOF
  | LPAR
  | RPAR
  | LBRACE
  | RBRACE
  | LBRACK
  | RBRACK
  | SEMI
  | COMMA
  | ASSIGN
  | AMP
  | COLON
  | QUES
  | NOT
  | SEQOR
  | SEQAND
  | EQ
  | NE
  | GT
  | LT
  | GE
  | LE
  | PLUS
  | MINUS
  | TIMES
  | DIV
  | MOD
  | DOUBLEPLUS
  | DOUBLEMINUS
  | PLUSASSIGN
  | MINUSASSIGN
  | TIMESASSIGN
  | DIVASSIGN
  | MODASSIGN
  | CHAR
  | ELSE
  | IF
  | INT
  | NULL
  | PRINT
  | PRINTLN
  | RETURN
  | VOID
  | WHILE
  | DO
  | DOWHILE
  | FOR
  | BOOL
  | SWITCH
  | CASE
  | FLOAT
  | PRINTF
  | STRING
  | CSTCHAR of (char)
  | CSTFLOAT of (float)
  | CSTBOOL of (bool)
  | CSTSTRING of (string)
  | NAME of (string)
  | CSTINT of (int)
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_EOF
    | TOKEN_LPAR
    | TOKEN_RPAR
    | TOKEN_LBRACE
    | TOKEN_RBRACE
    | TOKEN_LBRACK
    | TOKEN_RBRACK
    | TOKEN_SEMI
    | TOKEN_COMMA
    | TOKEN_ASSIGN
    | TOKEN_AMP
    | TOKEN_COLON
    | TOKEN_QUES
    | TOKEN_NOT
    | TOKEN_SEQOR
    | TOKEN_SEQAND
    | TOKEN_EQ
    | TOKEN_NE
    | TOKEN_GT
    | TOKEN_LT
    | TOKEN_GE
    | TOKEN_LE
    | TOKEN_PLUS
    | TOKEN_MINUS
    | TOKEN_TIMES
    | TOKEN_DIV
    | TOKEN_MOD
    | TOKEN_DOUBLEPLUS
    | TOKEN_DOUBLEMINUS
    | TOKEN_PLUSASSIGN
    | TOKEN_MINUSASSIGN
    | TOKEN_TIMESASSIGN
    | TOKEN_DIVASSIGN
    | TOKEN_MODASSIGN
    | TOKEN_CHAR
    | TOKEN_ELSE
    | TOKEN_IF
    | TOKEN_INT
    | TOKEN_NULL
    | TOKEN_PRINT
    | TOKEN_PRINTLN
    | TOKEN_RETURN
    | TOKEN_VOID
    | TOKEN_WHILE
    | TOKEN_DO
    | TOKEN_DOWHILE
    | TOKEN_FOR
    | TOKEN_BOOL
    | TOKEN_SWITCH
    | TOKEN_CASE
    | TOKEN_FLOAT
    | TOKEN_PRINTF
    | TOKEN_STRING
    | TOKEN_CSTCHAR
    | TOKEN_CSTFLOAT
    | TOKEN_CSTBOOL
    | TOKEN_CSTSTRING
    | TOKEN_NAME
    | TOKEN_CSTINT
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startMain
    | NONTERM_Main
    | NONTERM_Topdecs
    | NONTERM_Topdec
    | NONTERM_Vardec
    | NONTERM_Vardesc
    | NONTERM_Fundec
    | NONTERM_Paramdecs
    | NONTERM_Paramdecs1
    | NONTERM_Block
    | NONTERM_StmtOrDecSeq
    | NONTERM_Stmt
    | NONTERM_StmtM
    | NONTERM_ExecCase
    | NONTERM_StmtU
    | NONTERM_Expr
    | NONTERM_ExprNotAccess
    | NONTERM_AtExprNotAccess
    | NONTERM_Access
    | NONTERM_Exprs
    | NONTERM_Exprs1
    | NONTERM_Const
    | NONTERM_Bool
    | NONTERM_String
    | NONTERM_Float
    | NONTERM_Char
    | NONTERM_Type

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | EOF  -> 0 
  | LPAR  -> 1 
  | RPAR  -> 2 
  | LBRACE  -> 3 
  | RBRACE  -> 4 
  | LBRACK  -> 5 
  | RBRACK  -> 6 
  | SEMI  -> 7 
  | COMMA  -> 8 
  | ASSIGN  -> 9 
  | AMP  -> 10 
  | COLON  -> 11 
  | QUES  -> 12 
  | NOT  -> 13 
  | SEQOR  -> 14 
  | SEQAND  -> 15 
  | EQ  -> 16 
  | NE  -> 17 
  | GT  -> 18 
  | LT  -> 19 
  | GE  -> 20 
  | LE  -> 21 
  | PLUS  -> 22 
  | MINUS  -> 23 
  | TIMES  -> 24 
  | DIV  -> 25 
  | MOD  -> 26 
  | DOUBLEPLUS  -> 27 
  | DOUBLEMINUS  -> 28 
  | PLUSASSIGN  -> 29 
  | MINUSASSIGN  -> 30 
  | TIMESASSIGN  -> 31 
  | DIVASSIGN  -> 32 
  | MODASSIGN  -> 33 
  | CHAR  -> 34 
  | ELSE  -> 35 
  | IF  -> 36 
  | INT  -> 37 
  | NULL  -> 38 
  | PRINT  -> 39 
  | PRINTLN  -> 40 
  | RETURN  -> 41 
  | VOID  -> 42 
  | WHILE  -> 43 
  | DO  -> 44 
  | DOWHILE  -> 45 
  | FOR  -> 46 
  | BOOL  -> 47 
  | SWITCH  -> 48 
  | CASE  -> 49 
  | FLOAT  -> 50 
  | PRINTF  -> 51 
  | STRING  -> 52 
  | CSTCHAR _ -> 53 
  | CSTFLOAT _ -> 54 
  | CSTBOOL _ -> 55 
  | CSTSTRING _ -> 56 
  | NAME _ -> 57 
  | CSTINT _ -> 58 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_EOF 
  | 1 -> TOKEN_LPAR 
  | 2 -> TOKEN_RPAR 
  | 3 -> TOKEN_LBRACE 
  | 4 -> TOKEN_RBRACE 
  | 5 -> TOKEN_LBRACK 
  | 6 -> TOKEN_RBRACK 
  | 7 -> TOKEN_SEMI 
  | 8 -> TOKEN_COMMA 
  | 9 -> TOKEN_ASSIGN 
  | 10 -> TOKEN_AMP 
  | 11 -> TOKEN_COLON 
  | 12 -> TOKEN_QUES 
  | 13 -> TOKEN_NOT 
  | 14 -> TOKEN_SEQOR 
  | 15 -> TOKEN_SEQAND 
  | 16 -> TOKEN_EQ 
  | 17 -> TOKEN_NE 
  | 18 -> TOKEN_GT 
  | 19 -> TOKEN_LT 
  | 20 -> TOKEN_GE 
  | 21 -> TOKEN_LE 
  | 22 -> TOKEN_PLUS 
  | 23 -> TOKEN_MINUS 
  | 24 -> TOKEN_TIMES 
  | 25 -> TOKEN_DIV 
  | 26 -> TOKEN_MOD 
  | 27 -> TOKEN_DOUBLEPLUS 
  | 28 -> TOKEN_DOUBLEMINUS 
  | 29 -> TOKEN_PLUSASSIGN 
  | 30 -> TOKEN_MINUSASSIGN 
  | 31 -> TOKEN_TIMESASSIGN 
  | 32 -> TOKEN_DIVASSIGN 
  | 33 -> TOKEN_MODASSIGN 
  | 34 -> TOKEN_CHAR 
  | 35 -> TOKEN_ELSE 
  | 36 -> TOKEN_IF 
  | 37 -> TOKEN_INT 
  | 38 -> TOKEN_NULL 
  | 39 -> TOKEN_PRINT 
  | 40 -> TOKEN_PRINTLN 
  | 41 -> TOKEN_RETURN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_WHILE 
  | 44 -> TOKEN_DO 
  | 45 -> TOKEN_DOWHILE 
  | 46 -> TOKEN_FOR 
  | 47 -> TOKEN_BOOL 
  | 48 -> TOKEN_SWITCH 
  | 49 -> TOKEN_CASE 
  | 50 -> TOKEN_FLOAT 
  | 51 -> TOKEN_PRINTF 
  | 52 -> TOKEN_STRING 
  | 53 -> TOKEN_CSTCHAR 
  | 54 -> TOKEN_CSTFLOAT 
  | 55 -> TOKEN_CSTBOOL 
  | 56 -> TOKEN_CSTSTRING 
  | 57 -> TOKEN_NAME 
  | 58 -> TOKEN_CSTINT 
  | 61 -> TOKEN_end_of_input
  | 59 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startMain 
    | 1 -> NONTERM_Main 
    | 2 -> NONTERM_Topdecs 
    | 3 -> NONTERM_Topdecs 
    | 4 -> NONTERM_Topdec 
    | 5 -> NONTERM_Topdec 
    | 6 -> NONTERM_Vardec 
    | 7 -> NONTERM_Vardesc 
    | 8 -> NONTERM_Vardesc 
    | 9 -> NONTERM_Vardesc 
    | 10 -> NONTERM_Vardesc 
    | 11 -> NONTERM_Vardesc 
    | 12 -> NONTERM_Fundec 
    | 13 -> NONTERM_Fundec 
    | 14 -> NONTERM_Paramdecs 
    | 15 -> NONTERM_Paramdecs 
    | 16 -> NONTERM_Paramdecs1 
    | 17 -> NONTERM_Paramdecs1 
    | 18 -> NONTERM_Block 
    | 19 -> NONTERM_StmtOrDecSeq 
    | 20 -> NONTERM_StmtOrDecSeq 
    | 21 -> NONTERM_StmtOrDecSeq 
    | 22 -> NONTERM_StmtOrDecSeq 
    | 23 -> NONTERM_Stmt 
    | 24 -> NONTERM_Stmt 
    | 25 -> NONTERM_StmtM 
    | 26 -> NONTERM_StmtM 
    | 27 -> NONTERM_StmtM 
    | 28 -> NONTERM_StmtM 
    | 29 -> NONTERM_StmtM 
    | 30 -> NONTERM_StmtM 
    | 31 -> NONTERM_StmtM 
    | 32 -> NONTERM_StmtM 
    | 33 -> NONTERM_StmtM 
    | 34 -> NONTERM_ExecCase 
    | 35 -> NONTERM_ExecCase 
    | 36 -> NONTERM_StmtU 
    | 37 -> NONTERM_StmtU 
    | 38 -> NONTERM_StmtU 
    | 39 -> NONTERM_Expr 
    | 40 -> NONTERM_Expr 
    | 41 -> NONTERM_ExprNotAccess 
    | 42 -> NONTERM_ExprNotAccess 
    | 43 -> NONTERM_ExprNotAccess 
    | 44 -> NONTERM_ExprNotAccess 
    | 45 -> NONTERM_ExprNotAccess 
    | 46 -> NONTERM_ExprNotAccess 
    | 47 -> NONTERM_ExprNotAccess 
    | 48 -> NONTERM_ExprNotAccess 
    | 49 -> NONTERM_ExprNotAccess 
    | 50 -> NONTERM_ExprNotAccess 
    | 51 -> NONTERM_ExprNotAccess 
    | 52 -> NONTERM_ExprNotAccess 
    | 53 -> NONTERM_ExprNotAccess 
    | 54 -> NONTERM_ExprNotAccess 
    | 55 -> NONTERM_ExprNotAccess 
    | 56 -> NONTERM_ExprNotAccess 
    | 57 -> NONTERM_ExprNotAccess 
    | 58 -> NONTERM_ExprNotAccess 
    | 59 -> NONTERM_ExprNotAccess 
    | 60 -> NONTERM_ExprNotAccess 
    | 61 -> NONTERM_ExprNotAccess 
    | 62 -> NONTERM_ExprNotAccess 
    | 63 -> NONTERM_ExprNotAccess 
    | 64 -> NONTERM_ExprNotAccess 
    | 65 -> NONTERM_ExprNotAccess 
    | 66 -> NONTERM_ExprNotAccess 
    | 67 -> NONTERM_ExprNotAccess 
    | 68 -> NONTERM_ExprNotAccess 
    | 69 -> NONTERM_ExprNotAccess 
    | 70 -> NONTERM_ExprNotAccess 
    | 71 -> NONTERM_AtExprNotAccess 
    | 72 -> NONTERM_AtExprNotAccess 
    | 73 -> NONTERM_AtExprNotAccess 
    | 74 -> NONTERM_AtExprNotAccess 
    | 75 -> NONTERM_AtExprNotAccess 
    | 76 -> NONTERM_AtExprNotAccess 
    | 77 -> NONTERM_AtExprNotAccess 
    | 78 -> NONTERM_Access 
    | 79 -> NONTERM_Access 
    | 80 -> NONTERM_Access 
    | 81 -> NONTERM_Access 
    | 82 -> NONTERM_Access 
    | 83 -> NONTERM_Exprs 
    | 84 -> NONTERM_Exprs 
    | 85 -> NONTERM_Exprs1 
    | 86 -> NONTERM_Exprs1 
    | 87 -> NONTERM_Const 
    | 88 -> NONTERM_Const 
    | 89 -> NONTERM_Const 
    | 90 -> NONTERM_Bool 
    | 91 -> NONTERM_String 
    | 92 -> NONTERM_Float 
    | 93 -> NONTERM_Float 
    | 94 -> NONTERM_Char 
    | 95 -> NONTERM_Type 
    | 96 -> NONTERM_Type 
    | 97 -> NONTERM_Type 
    | 98 -> NONTERM_Type 
    | 99 -> NONTERM_Type 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 61 
let _fsyacc_tagOfErrorTerminal = 59

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | EOF  -> "EOF" 
  | LPAR  -> "LPAR" 
  | RPAR  -> "RPAR" 
  | LBRACE  -> "LBRACE" 
  | RBRACE  -> "RBRACE" 
  | LBRACK  -> "LBRACK" 
  | RBRACK  -> "RBRACK" 
  | SEMI  -> "SEMI" 
  | COMMA  -> "COMMA" 
  | ASSIGN  -> "ASSIGN" 
  | AMP  -> "AMP" 
  | COLON  -> "COLON" 
  | QUES  -> "QUES" 
  | NOT  -> "NOT" 
  | SEQOR  -> "SEQOR" 
  | SEQAND  -> "SEQAND" 
  | EQ  -> "EQ" 
  | NE  -> "NE" 
  | GT  -> "GT" 
  | LT  -> "LT" 
  | GE  -> "GE" 
  | LE  -> "LE" 
  | PLUS  -> "PLUS" 
  | MINUS  -> "MINUS" 
  | TIMES  -> "TIMES" 
  | DIV  -> "DIV" 
  | MOD  -> "MOD" 
  | DOUBLEPLUS  -> "DOUBLEPLUS" 
  | DOUBLEMINUS  -> "DOUBLEMINUS" 
  | PLUSASSIGN  -> "PLUSASSIGN" 
  | MINUSASSIGN  -> "MINUSASSIGN" 
  | TIMESASSIGN  -> "TIMESASSIGN" 
  | DIVASSIGN  -> "DIVASSIGN" 
  | MODASSIGN  -> "MODASSIGN" 
  | CHAR  -> "CHAR" 
  | ELSE  -> "ELSE" 
  | IF  -> "IF" 
  | INT  -> "INT" 
  | NULL  -> "NULL" 
  | PRINT  -> "PRINT" 
  | PRINTLN  -> "PRINTLN" 
  | RETURN  -> "RETURN" 
  | VOID  -> "VOID" 
  | WHILE  -> "WHILE" 
  | DO  -> "DO" 
  | DOWHILE  -> "DOWHILE" 
  | FOR  -> "FOR" 
  | BOOL  -> "BOOL" 
  | SWITCH  -> "SWITCH" 
  | CASE  -> "CASE" 
  | FLOAT  -> "FLOAT" 
  | PRINTF  -> "PRINTF" 
  | STRING  -> "STRING" 
  | CSTCHAR _ -> "CSTCHAR" 
  | CSTFLOAT _ -> "CSTFLOAT" 
  | CSTBOOL _ -> "CSTBOOL" 
  | CSTSTRING _ -> "CSTSTRING" 
  | NAME _ -> "NAME" 
  | CSTINT _ -> "CSTINT" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | EOF  -> (null : System.Object) 
  | LPAR  -> (null : System.Object) 
  | RPAR  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | SEMI  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | ASSIGN  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | QUES  -> (null : System.Object) 
  | NOT  -> (null : System.Object) 
  | SEQOR  -> (null : System.Object) 
  | SEQAND  -> (null : System.Object) 
  | EQ  -> (null : System.Object) 
  | NE  -> (null : System.Object) 
  | GT  -> (null : System.Object) 
  | LT  -> (null : System.Object) 
  | GE  -> (null : System.Object) 
  | LE  -> (null : System.Object) 
  | PLUS  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | TIMES  -> (null : System.Object) 
  | DIV  -> (null : System.Object) 
  | MOD  -> (null : System.Object) 
  | DOUBLEPLUS  -> (null : System.Object) 
  | DOUBLEMINUS  -> (null : System.Object) 
  | PLUSASSIGN  -> (null : System.Object) 
  | MINUSASSIGN  -> (null : System.Object) 
  | TIMESASSIGN  -> (null : System.Object) 
  | DIVASSIGN  -> (null : System.Object) 
  | MODASSIGN  -> (null : System.Object) 
  | CHAR  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | INT  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | PRINT  -> (null : System.Object) 
  | PRINTLN  -> (null : System.Object) 
  | RETURN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DOWHILE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | BOOL  -> (null : System.Object) 
  | SWITCH  -> (null : System.Object) 
  | CASE  -> (null : System.Object) 
  | FLOAT  -> (null : System.Object) 
  | PRINTF  -> (null : System.Object) 
  | STRING  -> (null : System.Object) 
  | CSTCHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTFLOAT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTBOOL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTSTRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CSTINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 1us; 65535us; 0us; 1us; 2us; 65535us; 0us; 2us; 4us; 5us; 2us; 65535us; 0us; 4us; 4us; 4us; 9us; 65535us; 0us; 6us; 4us; 6us; 25us; 34us; 29us; 34us; 35us; 34us; 37us; 42us; 40us; 42us; 43us; 42us; 47us; 42us; 4us; 65535us; 9us; 11us; 10us; 11us; 14us; 15us; 16us; 17us; 2us; 65535us; 0us; 8us; 4us; 8us; 2us; 65535us; 25us; 26us; 29us; 30us; 3us; 65535us; 25us; 33us; 29us; 33us; 35us; 36us; 15us; 65535us; 27us; 28us; 31us; 32us; 37us; 58us; 40us; 58us; 43us; 58us; 47us; 58us; 65us; 58us; 66us; 58us; 68us; 58us; 69us; 58us; 77us; 58us; 78us; 58us; 80us; 58us; 94us; 58us; 105us; 58us; 4us; 65535us; 37us; 38us; 40us; 41us; 43us; 44us; 47us; 48us; 5us; 65535us; 37us; 40us; 40us; 40us; 43us; 40us; 47us; 40us; 66us; 109us; 13us; 65535us; 37us; 49us; 40us; 49us; 43us; 49us; 47us; 49us; 65us; 67us; 66us; 50us; 68us; 70us; 69us; 70us; 77us; 79us; 78us; 79us; 80us; 81us; 94us; 95us; 105us; 106us; 2us; 65535us; 100us; 101us; 106us; 107us; 7us; 65535us; 37us; 51us; 40us; 51us; 43us; 51us; 47us; 51us; 66us; 51us; 69us; 108us; 78us; 110us; 53us; 65535us; 37us; 52us; 40us; 52us; 43us; 52us; 45us; 46us; 47us; 52us; 54us; 56us; 61us; 64us; 62us; 63us; 65us; 52us; 66us; 52us; 68us; 52us; 69us; 52us; 73us; 76us; 74us; 75us; 77us; 52us; 78us; 52us; 80us; 52us; 83us; 84us; 88us; 89us; 90us; 91us; 92us; 93us; 94us; 52us; 97us; 98us; 105us; 52us; 116us; 117us; 119us; 155us; 122us; 123us; 124us; 125us; 129us; 130us; 156us; 133us; 157us; 134us; 158us; 135us; 159us; 136us; 160us; 137us; 161us; 138us; 162us; 139us; 163us; 140us; 164us; 141us; 165us; 142us; 166us; 143us; 167us; 144us; 168us; 145us; 169us; 147us; 170us; 148us; 171us; 149us; 172us; 150us; 173us; 151us; 180us; 152us; 181us; 153us; 187us; 146us; 188us; 146us; 199us; 154us; 202us; 155us; 53us; 65535us; 37us; 113us; 40us; 113us; 43us; 113us; 45us; 113us; 47us; 113us; 54us; 113us; 61us; 113us; 62us; 113us; 65us; 113us; 66us; 113us; 68us; 113us; 69us; 113us; 73us; 113us; 74us; 113us; 77us; 113us; 78us; 113us; 80us; 113us; 83us; 113us; 88us; 113us; 90us; 113us; 92us; 113us; 94us; 113us; 97us; 113us; 105us; 113us; 116us; 113us; 119us; 113us; 122us; 113us; 124us; 113us; 129us; 113us; 156us; 113us; 157us; 113us; 158us; 113us; 159us; 113us; 160us; 113us; 161us; 113us; 162us; 113us; 163us; 113us; 164us; 113us; 165us; 113us; 166us; 113us; 167us; 113us; 168us; 113us; 169us; 113us; 170us; 113us; 171us; 113us; 172us; 113us; 173us; 113us; 180us; 113us; 181us; 113us; 187us; 114us; 188us; 114us; 199us; 113us; 202us; 113us; 55us; 65535us; 37us; 115us; 40us; 115us; 43us; 115us; 45us; 115us; 47us; 115us; 54us; 115us; 61us; 115us; 62us; 115us; 65us; 115us; 66us; 115us; 68us; 115us; 69us; 115us; 73us; 115us; 74us; 115us; 77us; 115us; 78us; 115us; 80us; 115us; 83us; 115us; 88us; 115us; 90us; 115us; 92us; 115us; 94us; 115us; 97us; 115us; 103us; 104us; 105us; 115us; 116us; 115us; 119us; 115us; 122us; 115us; 124us; 115us; 129us; 115us; 156us; 115us; 157us; 115us; 158us; 115us; 159us; 115us; 160us; 115us; 161us; 115us; 162us; 115us; 163us; 115us; 164us; 115us; 165us; 115us; 166us; 115us; 167us; 115us; 168us; 115us; 169us; 115us; 170us; 115us; 171us; 115us; 172us; 115us; 173us; 115us; 180us; 115us; 181us; 115us; 187us; 115us; 188us; 115us; 196us; 198us; 199us; 115us; 202us; 115us; 58us; 65535us; 37us; 112us; 40us; 112us; 43us; 112us; 45us; 112us; 47us; 112us; 54us; 112us; 61us; 112us; 62us; 112us; 65us; 112us; 66us; 112us; 68us; 112us; 69us; 112us; 73us; 112us; 74us; 112us; 77us; 112us; 78us; 112us; 80us; 112us; 83us; 112us; 88us; 112us; 90us; 112us; 92us; 112us; 94us; 112us; 97us; 112us; 105us; 112us; 116us; 112us; 119us; 112us; 122us; 112us; 124us; 112us; 129us; 112us; 156us; 112us; 157us; 112us; 158us; 112us; 159us; 112us; 160us; 112us; 161us; 112us; 162us; 112us; 163us; 112us; 164us; 112us; 165us; 112us; 166us; 112us; 167us; 112us; 168us; 112us; 169us; 112us; 170us; 112us; 171us; 112us; 172us; 112us; 173us; 112us; 175us; 176us; 178us; 179us; 180us; 112us; 181us; 112us; 187us; 112us; 188us; 111us; 190us; 191us; 193us; 194us; 196us; 197us; 199us; 112us; 202us; 112us; 1us; 65535us; 119us; 120us; 2us; 65535us; 119us; 201us; 202us; 203us; 55us; 65535us; 37us; 182us; 40us; 182us; 43us; 182us; 45us; 182us; 47us; 182us; 54us; 182us; 61us; 182us; 62us; 182us; 65us; 182us; 66us; 182us; 68us; 182us; 69us; 182us; 73us; 182us; 74us; 182us; 77us; 182us; 78us; 182us; 80us; 182us; 83us; 182us; 88us; 182us; 90us; 182us; 92us; 182us; 94us; 182us; 97us; 182us; 103us; 182us; 105us; 182us; 116us; 182us; 119us; 182us; 122us; 182us; 124us; 182us; 129us; 182us; 156us; 182us; 157us; 182us; 158us; 182us; 159us; 182us; 160us; 182us; 161us; 182us; 162us; 182us; 163us; 182us; 164us; 182us; 165us; 182us; 166us; 182us; 167us; 182us; 168us; 182us; 169us; 182us; 170us; 182us; 171us; 182us; 172us; 182us; 173us; 182us; 180us; 182us; 181us; 182us; 187us; 182us; 188us; 182us; 196us; 182us; 199us; 182us; 202us; 182us; 55us; 65535us; 37us; 183us; 40us; 183us; 43us; 183us; 45us; 183us; 47us; 183us; 54us; 183us; 61us; 183us; 62us; 183us; 65us; 183us; 66us; 183us; 68us; 183us; 69us; 183us; 73us; 183us; 74us; 183us; 77us; 183us; 78us; 183us; 80us; 183us; 83us; 183us; 88us; 183us; 90us; 183us; 92us; 183us; 94us; 183us; 97us; 183us; 103us; 183us; 105us; 183us; 116us; 183us; 119us; 183us; 122us; 183us; 124us; 183us; 129us; 183us; 156us; 183us; 157us; 183us; 158us; 183us; 159us; 183us; 160us; 183us; 161us; 183us; 162us; 183us; 163us; 183us; 164us; 183us; 165us; 183us; 166us; 183us; 167us; 183us; 168us; 183us; 169us; 183us; 170us; 183us; 171us; 183us; 172us; 183us; 173us; 183us; 180us; 183us; 181us; 183us; 187us; 183us; 188us; 183us; 196us; 183us; 199us; 183us; 202us; 183us; 55us; 65535us; 37us; 185us; 40us; 185us; 43us; 185us; 45us; 185us; 47us; 185us; 54us; 185us; 61us; 185us; 62us; 185us; 65us; 185us; 66us; 185us; 68us; 185us; 69us; 185us; 73us; 185us; 74us; 185us; 77us; 185us; 78us; 185us; 80us; 185us; 83us; 185us; 88us; 185us; 90us; 185us; 92us; 185us; 94us; 185us; 97us; 185us; 103us; 185us; 105us; 185us; 116us; 185us; 119us; 185us; 122us; 185us; 124us; 185us; 129us; 185us; 156us; 185us; 157us; 185us; 158us; 185us; 159us; 185us; 160us; 185us; 161us; 185us; 162us; 185us; 163us; 185us; 164us; 185us; 165us; 185us; 166us; 185us; 167us; 185us; 168us; 185us; 169us; 185us; 170us; 185us; 171us; 185us; 172us; 185us; 173us; 185us; 180us; 185us; 181us; 185us; 187us; 185us; 188us; 185us; 196us; 185us; 199us; 185us; 202us; 185us; 55us; 65535us; 37us; 184us; 40us; 184us; 43us; 184us; 45us; 184us; 47us; 184us; 54us; 184us; 61us; 184us; 62us; 184us; 65us; 184us; 66us; 184us; 68us; 184us; 69us; 184us; 73us; 184us; 74us; 184us; 77us; 184us; 78us; 184us; 80us; 184us; 83us; 184us; 88us; 184us; 90us; 184us; 92us; 184us; 94us; 184us; 97us; 184us; 103us; 184us; 105us; 184us; 116us; 184us; 119us; 184us; 122us; 184us; 124us; 184us; 129us; 184us; 156us; 184us; 157us; 184us; 158us; 184us; 159us; 184us; 160us; 184us; 161us; 184us; 162us; 184us; 163us; 184us; 164us; 184us; 165us; 184us; 166us; 184us; 167us; 184us; 168us; 184us; 169us; 184us; 170us; 184us; 171us; 184us; 172us; 184us; 173us; 184us; 180us; 184us; 181us; 184us; 187us; 184us; 188us; 184us; 196us; 184us; 199us; 184us; 202us; 184us; 55us; 65535us; 37us; 186us; 40us; 186us; 43us; 186us; 45us; 186us; 47us; 186us; 54us; 186us; 61us; 186us; 62us; 186us; 65us; 186us; 66us; 186us; 68us; 186us; 69us; 186us; 73us; 186us; 74us; 186us; 77us; 186us; 78us; 186us; 80us; 186us; 83us; 186us; 88us; 186us; 90us; 186us; 92us; 186us; 94us; 186us; 97us; 186us; 103us; 186us; 105us; 186us; 116us; 186us; 119us; 186us; 122us; 186us; 124us; 186us; 129us; 186us; 156us; 186us; 157us; 186us; 158us; 186us; 159us; 186us; 160us; 186us; 161us; 186us; 162us; 186us; 163us; 186us; 164us; 186us; 165us; 186us; 166us; 186us; 167us; 186us; 168us; 186us; 169us; 186us; 170us; 186us; 171us; 186us; 172us; 186us; 173us; 186us; 180us; 186us; 181us; 186us; 187us; 186us; 188us; 186us; 196us; 186us; 199us; 186us; 202us; 186us; 9us; 65535us; 0us; 10us; 4us; 10us; 25us; 9us; 29us; 9us; 35us; 9us; 37us; 9us; 40us; 9us; 43us; 9us; 47us; 9us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 3us; 6us; 9us; 19us; 24us; 27us; 30us; 34us; 50us; 55us; 61us; 75us; 78us; 86us; 140us; 194us; 250us; 309us; 311us; 314us; 370us; 426us; 482us; 538us; 594us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 2us; 6us; 13us; 3us; 6us; 10us; 11us; 1us; 7us; 2us; 7us; 13us; 1us; 8us; 3us; 8us; 10us; 11us; 1us; 9us; 3us; 9us; 10us; 11us; 1us; 9us; 2us; 10us; 11us; 1us; 10us; 1us; 11us; 1us; 11us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 12us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 13us; 1us; 15us; 2us; 16us; 17us; 1us; 17us; 1us; 17us; 1us; 18us; 1us; 18us; 1us; 18us; 1us; 20us; 1us; 20us; 2us; 21us; 22us; 1us; 21us; 1us; 21us; 1us; 22us; 15us; 22us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 22us; 1us; 22us; 1us; 23us; 3us; 23us; 29us; 36us; 1us; 24us; 15us; 25us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 25us; 2us; 26us; 27us; 1us; 26us; 15us; 27us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 27us; 1us; 28us; 1us; 29us; 3us; 29us; 36us; 37us; 1us; 29us; 3us; 29us; 36us; 37us; 17us; 29us; 36us; 37us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 29us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 29us; 3us; 29us; 36us; 37us; 1us; 29us; 1us; 29us; 2us; 29us; 36us; 1us; 29us; 1us; 30us; 2us; 30us; 38us; 1us; 30us; 2us; 30us; 38us; 16us; 30us; 38us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 30us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 30us; 2us; 30us; 38us; 1us; 30us; 1us; 31us; 1us; 31us; 1us; 31us; 1us; 31us; 15us; 31us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 31us; 1us; 31us; 1us; 32us; 1us; 32us; 15us; 32us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 32us; 15us; 32us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 32us; 15us; 32us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 32us; 1us; 32us; 1us; 33us; 1us; 33us; 15us; 33us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 33us; 1us; 33us; 1us; 33us; 1us; 33us; 2us; 34us; 35us; 2us; 34us; 35us; 2us; 34us; 35us; 2us; 34us; 35us; 1us; 35us; 1us; 36us; 1us; 37us; 1us; 38us; 11us; 39us; 42us; 62us; 63us; 64us; 65us; 67us; 69us; 70us; 79us; 82us; 10us; 39us; 42us; 62us; 63us; 64us; 65us; 67us; 69us; 70us; 82us; 1us; 40us; 2us; 40us; 76us; 1us; 41us; 1us; 42us; 15us; 42us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 2us; 43us; 78us; 1us; 43us; 1us; 43us; 1us; 43us; 1us; 44us; 15us; 44us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 45us; 15us; 45us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 46us; 1us; 46us; 1us; 46us; 1us; 46us; 15us; 46us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 1us; 46us; 1us; 47us; 15us; 48us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 60us; 61us; 14us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 61us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 62us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 63us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 64us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 69us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 70us; 15us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 82us; 16us; 48us; 49us; 50us; 51us; 52us; 53us; 54us; 55us; 56us; 57us; 58us; 59us; 60us; 61us; 85us; 86us; 1us; 48us; 1us; 49us; 1us; 50us; 1us; 51us; 1us; 52us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 1us; 58us; 1us; 59us; 1us; 60us; 1us; 61us; 1us; 61us; 1us; 62us; 1us; 63us; 1us; 64us; 1us; 65us; 1us; 66us; 2us; 66us; 82us; 1us; 67us; 1us; 68us; 2us; 68us; 82us; 1us; 69us; 1us; 70us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 75us; 1us; 76us; 2us; 76us; 79us; 1us; 76us; 1us; 77us; 2us; 77us; 82us; 1us; 78us; 1us; 79us; 2us; 79us; 82us; 1us; 79us; 2us; 80us; 81us; 2us; 80us; 82us; 1us; 81us; 1us; 82us; 1us; 82us; 1us; 84us; 1us; 86us; 1us; 86us; 1us; 87us; 2us; 88us; 93us; 1us; 88us; 1us; 89us; 1us; 90us; 1us; 91us; 1us; 92us; 1us; 93us; 1us; 94us; 1us; 95us; 1us; 96us; 1us; 97us; 1us; 98us; 1us; 99us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 23us; 27us; 29us; 32us; 34us; 38us; 40us; 44us; 46us; 49us; 51us; 53us; 55us; 57us; 59us; 61us; 63us; 65us; 67us; 69us; 71us; 73us; 75us; 77us; 80us; 82us; 84us; 86us; 88us; 90us; 92us; 94us; 97us; 99us; 101us; 103us; 119us; 121us; 123us; 125us; 129us; 131us; 147us; 149us; 152us; 154us; 170us; 172us; 174us; 176us; 180us; 182us; 186us; 204us; 220us; 222us; 226us; 228us; 230us; 233us; 235us; 237us; 240us; 242us; 245us; 262us; 278us; 280us; 283us; 285us; 287us; 289us; 291us; 293us; 309us; 311us; 313us; 315us; 317us; 333us; 335us; 351us; 353us; 369us; 371us; 373us; 375us; 377us; 393us; 395us; 397us; 399us; 401us; 404us; 407us; 410us; 413us; 415us; 417us; 419us; 421us; 433us; 444us; 446us; 449us; 451us; 453us; 469us; 472us; 474us; 476us; 478us; 480us; 496us; 498us; 514us; 516us; 518us; 520us; 522us; 538us; 540us; 542us; 558us; 574us; 590us; 606us; 622us; 638us; 654us; 670us; 686us; 702us; 718us; 734us; 750us; 765us; 781us; 797us; 813us; 829us; 845us; 861us; 877us; 893us; 910us; 912us; 914us; 916us; 918us; 920us; 922us; 924us; 926us; 928us; 930us; 932us; 934us; 936us; 938us; 940us; 942us; 944us; 946us; 948us; 950us; 953us; 955us; 957us; 960us; 962us; 964us; 966us; 968us; 970us; 972us; 974us; 976us; 979us; 981us; 983us; 986us; 988us; 990us; 993us; 995us; 998us; 1001us; 1003us; 1005us; 1007us; 1009us; 1011us; 1013us; 1015us; 1018us; 1020us; 1022us; 1024us; 1026us; 1028us; 1030us; 1032us; 1034us; 1036us; 1038us; 1040us; |]
let _fsyacc_action_rows = 218
let _fsyacc_actionTableElements = [|6us; 16386us; 34us; 214us; 37us; 213us; 42us; 23us; 47us; 215us; 50us; 216us; 52us; 217us; 0us; 49152us; 1us; 32768us; 0us; 3us; 0us; 16385us; 6us; 16386us; 34us; 214us; 37us; 213us; 42us; 23us; 47us; 215us; 50us; 216us; 52us; 217us; 0us; 16387us; 1us; 32768us; 7us; 7us; 0us; 16388us; 0us; 16389us; 3us; 32768us; 1us; 16us; 24us; 14us; 57us; 12us; 3us; 32768us; 1us; 16us; 24us; 14us; 57us; 13us; 1us; 16390us; 5us; 19us; 0us; 16391us; 1us; 16391us; 1us; 29us; 3us; 32768us; 1us; 16us; 24us; 14us; 57us; 12us; 1us; 16392us; 5us; 19us; 3us; 32768us; 1us; 16us; 24us; 14us; 57us; 12us; 2us; 32768us; 2us; 18us; 5us; 19us; 0us; 16393us; 2us; 32768us; 6us; 20us; 58us; 21us; 0us; 16394us; 1us; 32768us; 6us; 22us; 0us; 16395us; 1us; 32768us; 57us; 24us; 1us; 32768us; 1us; 25us; 5us; 16398us; 34us; 214us; 37us; 213us; 47us; 215us; 50us; 216us; 52us; 217us; 1us; 32768us; 2us; 27us; 1us; 32768us; 3us; 37us; 0us; 16396us; 5us; 16398us; 34us; 214us; 37us; 213us; 47us; 215us; 50us; 216us; 52us; 217us; 1us; 32768us; 2us; 31us; 1us; 32768us; 3us; 37us; 0us; 16397us; 0us; 16399us; 1us; 16400us; 8us; 35us; 5us; 32768us; 34us; 214us; 37us; 213us; 47us; 215us; 50us; 216us; 52us; 217us; 0us; 16401us; 29us; 16403us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 34us; 214us; 36us; 60us; 37us; 213us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 47us; 215us; 48us; 96us; 50us; 216us; 51us; 126us; 52us; 217us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 1us; 32768us; 4us; 39us; 0us; 16402us; 29us; 16403us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 34us; 214us; 36us; 60us; 37us; 213us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 47us; 215us; 48us; 96us; 50us; 216us; 51us; 126us; 52us; 217us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16404us; 2us; 32768us; 7us; 43us; 9us; 45us; 29us; 16403us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 34us; 214us; 36us; 60us; 37us; 213us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 47us; 215us; 48us; 96us; 50us; 216us; 51us; 126us; 52us; 217us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16405us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 7us; 47us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 29us; 16403us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 34us; 214us; 36us; 60us; 37us; 213us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 47us; 215us; 48us; 96us; 50us; 216us; 51us; 126us; 52us; 217us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16406us; 0us; 16407us; 1us; 16407us; 35us; 69us; 0us; 16408us; 15us; 32768us; 7us; 53us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 0us; 16409us; 18us; 32768us; 1us; 188us; 7us; 55us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16410us; 15us; 32768us; 7us; 57us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 0us; 16411us; 0us; 16412us; 1us; 32768us; 1us; 61us; 1us; 32768us; 1us; 62us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 66us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 15us; 32768us; 2us; 65us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 60us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 1us; 32768us; 35us; 68us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 60us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16413us; 1us; 32768us; 1us; 73us; 1us; 32768us; 1us; 74us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 78us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 15us; 32768us; 2us; 77us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 60us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 72us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16414us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 1us; 32768us; 43us; 82us; 1us; 32768us; 1us; 83us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 85us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 1us; 32768us; 7us; 86us; 0us; 16415us; 1us; 32768us; 1us; 88us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 7us; 90us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 7us; 92us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 94us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16416us; 1us; 32768us; 1us; 97us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 99us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 1us; 32768us; 3us; 100us; 1us; 32768us; 49us; 103us; 1us; 32768us; 4us; 102us; 0us; 16417us; 9us; 32768us; 1us; 187us; 10us; 190us; 23us; 205us; 38us; 207us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 58us; 204us; 1us; 32768us; 11us; 105us; 24us; 32768us; 1us; 188us; 3us; 37us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 36us; 59us; 38us; 207us; 39us; 124us; 40us; 132us; 41us; 54us; 43us; 71us; 44us; 80us; 46us; 87us; 48us; 96us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 1us; 16418us; 49us; 103us; 0us; 16419us; 0us; 16420us; 0us; 16421us; 0us; 16422us; 10us; 16423us; 2us; 195us; 5us; 199us; 9us; 116us; 27us; 174us; 28us; 177us; 29us; 171us; 30us; 172us; 31us; 173us; 32us; 180us; 33us; 181us; 9us; 16423us; 5us; 199us; 9us; 116us; 27us; 174us; 28us; 177us; 29us; 171us; 30us; 172us; 31us; 173us; 32us; 180us; 33us; 181us; 0us; 16424us; 1us; 16424us; 2us; 189us; 0us; 16425us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 14us; 16426us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 1us; 16462us; 1us; 119us; 17us; 16467us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 1us; 32768us; 2us; 121us; 0us; 16427us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16428us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 14us; 16429us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 1us; 32768us; 1us; 127us; 1us; 32768us; 56us; 128us; 1us; 32768us; 8us; 129us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 15us; 32768us; 2us; 131us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 0us; 16430us; 0us; 16431us; 3us; 16432us; 24us; 158us; 25us; 159us; 26us; 160us; 3us; 16433us; 24us; 158us; 25us; 159us; 26us; 160us; 0us; 16434us; 0us; 16435us; 0us; 16436us; 9us; 16437us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 9us; 16438us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 9us; 16439us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 9us; 16440us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 9us; 16441us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 9us; 16442us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 11us; 16443us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 12us; 16444us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 32768us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 15us; 32768us; 11us; 170us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16445us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16446us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16447us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16448us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16453us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 14us; 16454us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 15us; 32768us; 6us; 200us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 15us; 16469us; 8us; 202us; 12us; 169us; 14us; 168us; 15us; 167us; 16us; 161us; 17us; 162us; 18us; 163us; 19us; 164us; 20us; 165us; 21us; 166us; 22us; 156us; 23us; 157us; 24us; 158us; 25us; 159us; 26us; 160us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16449us; 3us; 32768us; 1us; 193us; 24us; 196us; 57us; 192us; 1us; 16450us; 5us; 199us; 0us; 16451us; 3us; 32768us; 1us; 193us; 24us; 196us; 57us; 192us; 1us; 16452us; 5us; 199us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 0us; 16458us; 0us; 16459us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16460us; 3us; 32768us; 1us; 193us; 24us; 196us; 57us; 192us; 1us; 16461us; 5us; 199us; 0us; 16462us; 3us; 32768us; 1us; 193us; 24us; 196us; 57us; 192us; 2us; 32768us; 2us; 195us; 5us; 199us; 0us; 16463us; 11us; 32768us; 1us; 188us; 10us; 190us; 23us; 205us; 24us; 196us; 38us; 207us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 192us; 58us; 204us; 1us; 16464us; 5us; 199us; 0us; 16465us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16466us; 0us; 16468us; 17us; 32768us; 1us; 188us; 10us; 190us; 13us; 122us; 23us; 205us; 24us; 196us; 27us; 175us; 28us; 178us; 38us; 207us; 39us; 124us; 40us; 132us; 51us; 126us; 53us; 212us; 54us; 210us; 55us; 208us; 56us; 209us; 57us; 118us; 58us; 204us; 0us; 16470us; 0us; 16471us; 2us; 32768us; 54us; 211us; 58us; 206us; 0us; 16472us; 0us; 16473us; 0us; 16474us; 0us; 16475us; 0us; 16476us; 0us; 16477us; 0us; 16478us; 0us; 16479us; 0us; 16480us; 0us; 16481us; 0us; 16482us; 0us; 16483us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 7us; 8us; 10us; 11us; 18us; 19us; 21us; 22us; 23us; 27us; 31us; 33us; 34us; 36us; 40us; 42us; 46us; 49us; 50us; 53us; 54us; 56us; 57us; 59us; 61us; 67us; 69us; 71us; 72us; 78us; 80us; 82us; 83us; 84us; 86us; 92us; 93us; 123us; 125us; 126us; 156us; 157us; 160us; 190us; 191us; 209us; 225us; 255us; 256us; 257us; 259us; 260us; 276us; 277us; 296us; 297us; 313us; 314us; 315us; 317us; 319us; 337us; 355us; 371us; 387us; 412us; 437us; 439us; 464us; 489us; 490us; 492us; 494us; 512us; 530us; 546us; 562us; 587us; 612us; 613us; 638us; 640us; 642us; 660us; 676us; 678us; 679us; 681us; 699us; 715us; 733us; 749us; 767us; 783us; 808us; 809us; 811us; 829us; 845us; 847us; 849us; 851us; 852us; 862us; 864us; 889us; 891us; 892us; 893us; 894us; 895us; 906us; 916us; 917us; 919us; 920us; 938us; 953us; 955us; 973us; 975us; 976us; 994us; 995us; 1013us; 1028us; 1030us; 1032us; 1034us; 1052us; 1068us; 1069us; 1070us; 1074us; 1078us; 1079us; 1080us; 1081us; 1091us; 1101us; 1111us; 1121us; 1131us; 1141us; 1153us; 1166us; 1181us; 1197us; 1212us; 1227us; 1242us; 1257us; 1272us; 1287us; 1303us; 1319us; 1337us; 1355us; 1373us; 1391us; 1409us; 1427us; 1445us; 1463us; 1481us; 1499us; 1517us; 1535us; 1553us; 1571us; 1589us; 1607us; 1625us; 1643us; 1644us; 1648us; 1650us; 1651us; 1655us; 1657us; 1675us; 1693us; 1694us; 1695us; 1696us; 1697us; 1698us; 1716us; 1734us; 1735us; 1739us; 1741us; 1742us; 1746us; 1749us; 1750us; 1762us; 1764us; 1765us; 1783us; 1784us; 1785us; 1803us; 1804us; 1805us; 1808us; 1809us; 1810us; 1811us; 1812us; 1813us; 1814us; 1815us; 1816us; 1817us; 1818us; 1819us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 2us; 0us; 2us; 2us; 1us; 2us; 1us; 2us; 3us; 3us; 4us; 6us; 6us; 0us; 1us; 1us; 3us; 3us; 0us; 2us; 3us; 5us; 1us; 1us; 2us; 2us; 3us; 1us; 7us; 5us; 7us; 9us; 7us; 4us; 5us; 7us; 5us; 5us; 1us; 1us; 1us; 3us; 4us; 2us; 2us; 6us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 3us; 2us; 1us; 3us; 2us; 2us; 4us; 0us; 1us; 1us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 2us; 3us; 3us; 4us; 5us; 5us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 8us; 8us; 9us; 10us; 10us; 10us; 10us; 11us; 11us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 12us; 13us; 13us; 14us; 14us; 14us; 15us; 15us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 16us; 17us; 17us; 17us; 17us; 17us; 17us; 17us; 18us; 18us; 18us; 18us; 18us; 19us; 19us; 20us; 20us; 21us; 21us; 21us; 22us; 23us; 24us; 24us; 25us; 26us; 26us; 26us; 26us; 26us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 16385us; 65535us; 16387us; 65535us; 16388us; 16389us; 65535us; 65535us; 65535us; 16391us; 65535us; 65535us; 65535us; 65535us; 65535us; 16393us; 65535us; 16394us; 65535us; 16395us; 65535us; 65535us; 65535us; 65535us; 65535us; 16396us; 65535us; 65535us; 65535us; 16397us; 16399us; 65535us; 65535us; 16401us; 65535us; 65535us; 16402us; 65535us; 16404us; 65535us; 65535us; 16405us; 65535us; 65535us; 65535us; 16406us; 16407us; 65535us; 16408us; 65535us; 16409us; 65535us; 16410us; 65535us; 16411us; 16412us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16413us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16414us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16416us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16417us; 65535us; 65535us; 65535us; 65535us; 16419us; 16420us; 16421us; 16422us; 65535us; 65535us; 16424us; 65535us; 16425us; 65535us; 65535us; 65535us; 65535us; 65535us; 16427us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16430us; 16431us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16449us; 65535us; 65535us; 16451us; 65535us; 65535us; 65535us; 65535us; 16455us; 16456us; 16457us; 16458us; 16459us; 65535us; 65535us; 16460us; 65535us; 65535us; 16462us; 65535us; 65535us; 16463us; 65535us; 65535us; 16465us; 65535us; 16466us; 16468us; 65535us; 16470us; 16471us; 65535us; 16472us; 16473us; 16474us; 16475us; 16476us; 16477us; 16478us; 16479us; 16480us; 16481us; 16482us; 16483us; |]
let _fsyacc_reductions ()  =    [| 
# 550 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> Absyn.program in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (FSharp.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : 'gentype__startMain));
# 559 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 48 "CPar.fsy"
                                                               Prog _1 
                   )
# 48 "CPar.fsy"
                 : Absyn.program));
# 570 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 53 "CPar.fsy"
                                                               [] 
                   )
# 53 "CPar.fsy"
                 : 'gentype_Topdecs));
# 580 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Topdec in
            let _2 = parseState.GetInput(2) :?> 'gentype_Topdecs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 54 "CPar.fsy"
                                                               _1 :: _2 
                   )
# 54 "CPar.fsy"
                 : 'gentype_Topdecs));
# 592 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 58 "CPar.fsy"
                                                               Vardec (fst _1, snd _1) 
                   )
# 58 "CPar.fsy"
                 : 'gentype_Topdec));
# 603 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Fundec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 59 "CPar.fsy"
                                                               _1 
                   )
# 59 "CPar.fsy"
                 : 'gentype_Topdec));
# 614 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 77 "CPar.fsy"
                                                               ((fst _2) _1, snd _2) 
                   )
# 77 "CPar.fsy"
                 : 'gentype_Vardec));
# 626 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 88 "CPar.fsy"
                                                               ((fun t -> t), _1)                      
                   )
# 88 "CPar.fsy"
                 : 'gentype_Vardesc));
# 637 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 93 "CPar.fsy"
                                                               compose1 TypP _2                        
                   )
# 93 "CPar.fsy"
                 : 'gentype_Vardesc));
# 648 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 95 "CPar.fsy"
                                                               _2                                      
                   )
# 95 "CPar.fsy"
                 : 'gentype_Vardesc));
# 659 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 97 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, None)) _1    
                   )
# 97 "CPar.fsy"
                 : 'gentype_Vardesc));
# 670 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardesc in
            let _3 = parseState.GetInput(3) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 99 "CPar.fsy"
                                                               compose1 (fun t -> TypA(t, Some _3)) _1 
                   )
# 99 "CPar.fsy"
                 : 'gentype_Vardesc));
# 682 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 104 "CPar.fsy"
                                                               Fundec(None,     _2, _4, _6) 
                   )
# 104 "CPar.fsy"
                 : 'gentype_Fundec));
# 695 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Type in
            let _2 = parseState.GetInput(2) :?> string in
            let _4 = parseState.GetInput(4) :?> 'gentype_Paramdecs in
            let _6 = parseState.GetInput(6) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 106 "CPar.fsy"
                                                               Fundec(Some(_1), _2, _4, _6) 
                   )
# 106 "CPar.fsy"
                 : 'gentype_Fundec));
# 709 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 111 "CPar.fsy"
                                                               [] 
                   )
# 111 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 719 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 112 "CPar.fsy"
                                                               _1 
                   )
# 112 "CPar.fsy"
                 : 'gentype_Paramdecs));
# 730 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 116 "CPar.fsy"
                                                               [_1]     
                   )
# 116 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 741 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Paramdecs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 117 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 117 "CPar.fsy"
                 : 'gentype_Paramdecs1));
# 753 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 122 "CPar.fsy"
                                                               Block _2 
                   )
# 122 "CPar.fsy"
                 : 'gentype_Block));
# 764 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 126 "CPar.fsy"
                                                               [] 
                   )
# 126 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 774 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Stmt in
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 127 "CPar.fsy"
                                                               Stmt _1 :: _2 
                   )
# 127 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 786 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 128 "CPar.fsy"
                                                               Dec (fst _1, snd _1) :: _3 
                   )
# 128 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 798 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Vardec in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtOrDecSeq in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 129 "CPar.fsy"
                                                               DecAndAssign (fst _1, snd _1, _3) :: _5 
                   )
# 129 "CPar.fsy"
                 : 'gentype_StmtOrDecSeq));
# 811 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 133 "CPar.fsy"
                                                               _1 
                   )
# 133 "CPar.fsy"
                 : 'gentype_Stmt));
# 822 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 134 "CPar.fsy"
                                                               _1 
                   )
# 134 "CPar.fsy"
                 : 'gentype_Stmt));
# 833 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 138 "CPar.fsy"
                                                               Expr(_1)             
                   )
# 138 "CPar.fsy"
                 : 'gentype_StmtM));
# 844 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 139 "CPar.fsy"
                                                               Return None          
                   )
# 139 "CPar.fsy"
                 : 'gentype_StmtM));
# 854 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 140 "CPar.fsy"
                                                               Return(Some(_2))     
                   )
# 140 "CPar.fsy"
                 : 'gentype_StmtM));
# 865 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Block in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 141 "CPar.fsy"
                                                               _1                   
                   )
# 141 "CPar.fsy"
                 : 'gentype_StmtM));
# 876 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 142 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 142 "CPar.fsy"
                 : 'gentype_StmtM));
# 889 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 143 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 143 "CPar.fsy"
                 : 'gentype_StmtM));
# 901 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 144 "CPar.fsy"
                                                               DoWhile(_2, _5)      
                   )
# 144 "CPar.fsy"
                 : 'gentype_StmtM));
# 913 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            let _7 = parseState.GetInput(7) :?> 'gentype_Expr in
            let _9 = parseState.GetInput(9) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 145 "CPar.fsy"
                                                                        For(_3, _5, _7, _9) 
                   )
# 145 "CPar.fsy"
                 : 'gentype_StmtM));
# 927 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _6 = parseState.GetInput(6) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 146 "CPar.fsy"
                                                                        Switch(_3, _6) 
                   )
# 146 "CPar.fsy"
                 : 'gentype_StmtM));
# 939 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 149 "CPar.fsy"
                                                                          [Case(_2,_4)] 
                   )
# 149 "CPar.fsy"
                 : 'gentype_ExecCase));
# 951 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            let _4 = parseState.GetInput(4) :?> 'gentype_StmtM in
            let _5 = parseState.GetInput(5) :?> 'gentype_ExecCase in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 150 "CPar.fsy"
                                                                          Case(_2,_4) :: _5
                   )
# 150 "CPar.fsy"
                 : 'gentype_ExecCase));
# 964 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtM in
            let _7 = parseState.GetInput(7) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 154 "CPar.fsy"
                                                               If(_3, _5, _7)       
                   )
# 154 "CPar.fsy"
                 : 'gentype_StmtU));
# 977 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Stmt in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 155 "CPar.fsy"
                                                               If(_3, _5, Block []) 
                   )
# 155 "CPar.fsy"
                 : 'gentype_StmtU));
# 989 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_StmtU in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 156 "CPar.fsy"
                                                               While(_3, _5)        
                   )
# 156 "CPar.fsy"
                 : 'gentype_StmtU));
# 1001 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 160 "CPar.fsy"
                                                               Access _1           
                   )
# 160 "CPar.fsy"
                 : 'gentype_Expr));
# 1012 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 161 "CPar.fsy"
                                                               _1                  
                   )
# 161 "CPar.fsy"
                 : 'gentype_Expr));
# 1023 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 165 "CPar.fsy"
                                                               _1                  
                   )
# 165 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1034 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 166 "CPar.fsy"
                                                               Assign(_1, _3)      
                   )
# 166 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1046 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 167 "CPar.fsy"
                                                               Call(_1, _3)        
                   )
# 167 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1058 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 168 "CPar.fsy"
                                                               Prim1("!", _2)      
                   )
# 168 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1069 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 169 "CPar.fsy"
                                                               Prim1("printi", _2) 
                   )
# 169 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1080 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _3 = parseState.GetInput(3) :?> string in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 170 "CPar.fsy"
                                                                Printf(_3 , _5)      
                   )
# 170 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1092 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 171 "CPar.fsy"
                                                               Prim1("printc", nl)
                   )
# 171 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1102 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 172 "CPar.fsy"
                                                               Prim2("+",  _1, _3) 
                   )
# 172 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1114 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 173 "CPar.fsy"
                                                               Prim2("-",  _1, _3) 
                   )
# 173 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1126 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 174 "CPar.fsy"
                                                               Prim2("*",  _1, _3) 
                   )
# 174 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1138 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 175 "CPar.fsy"
                                                               Prim2("/",  _1, _3) 
                   )
# 175 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1150 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 176 "CPar.fsy"
                                                               Prim2("%",  _1, _3) 
                   )
# 176 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1162 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 177 "CPar.fsy"
                                                               Prim2("==", _1, _3) 
                   )
# 177 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1174 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 178 "CPar.fsy"
                                                               Prim2("!=", _1, _3) 
                   )
# 178 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1186 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 179 "CPar.fsy"
                                                               Prim2(">",  _1, _3) 
                   )
# 179 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1198 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 180 "CPar.fsy"
                                                               Prim2("<",  _1, _3) 
                   )
# 180 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1210 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 181 "CPar.fsy"
                                                               Prim2(">=", _1, _3) 
                   )
# 181 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1222 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 182 "CPar.fsy"
                                                               Prim2("<=", _1, _3) 
                   )
# 182 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1234 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 183 "CPar.fsy"
                                                               Andalso(_1, _3)     
                   )
# 183 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1246 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 184 "CPar.fsy"
                                                               Orelse(_1, _3)      
                   )
# 184 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1258 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            let _5 = parseState.GetInput(5) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 185 "CPar.fsy"
                                                               Prim3(_1, _3, _5)   
                   )
# 185 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1271 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 186 "CPar.fsy"
                                                               PlusAssign(_1, _3)  
                   )
# 186 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1283 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 187 "CPar.fsy"
                                                               MinusAssign(_1, _3) 
                   )
# 187 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1295 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 188 "CPar.fsy"
                                                               TimesAssign(_1, _3) 
                   )
# 188 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1307 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 189 "CPar.fsy"
                                                               RearPlus(_1,"++")    
                   )
# 189 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1318 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 190 "CPar.fsy"
                                                               PrePlus("++",_2)   
                   )
# 190 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1329 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 191 "CPar.fsy"
                                                               RearMinus(_1,"--")    
                   )
# 191 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1340 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 192 "CPar.fsy"
                                                               PreMinus("--",_2)   
                   )
# 192 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1351 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 193 "CPar.fsy"
                                                               DivAssign(_1, _3)   
                   )
# 193 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1363 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 194 "CPar.fsy"
                                                               ModAssign(_1, _3)   
                   )
# 194 "CPar.fsy"
                 : 'gentype_ExprNotAccess));
# 1375 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Const in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 202 "CPar.fsy"
                                                               CstI _1             
                   )
# 202 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1386 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 203 "CPar.fsy"
                                                               CstB _1             
                   )
# 203 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1397 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Float in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 204 "CPar.fsy"
                                                               CstF _1             
                   )
# 204 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1408 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_String in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 205 "CPar.fsy"
                                                               CstS _1             
                   )
# 205 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1419 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 206 "CPar.fsy"
                                                               CstC (_1)          
                   )
# 206 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1430 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_ExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 207 "CPar.fsy"
                                                               _2                  
                   )
# 207 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1441 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 208 "CPar.fsy"
                                                               Addr _2             
                   )
# 208 "CPar.fsy"
                 : 'gentype_AtExprNotAccess));
# 1452 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 212 "CPar.fsy"
                                                               AccVar _1           
                   )
# 212 "CPar.fsy"
                 : 'gentype_Access));
# 1463 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 213 "CPar.fsy"
                                                               _2                  
                   )
# 213 "CPar.fsy"
                 : 'gentype_Access));
# 1474 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_Access in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 214 "CPar.fsy"
                                                               AccDeref (Access _2)
                   )
# 214 "CPar.fsy"
                 : 'gentype_Access));
# 1485 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> 'gentype_AtExprNotAccess in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 215 "CPar.fsy"
                                                               AccDeref _2         
                   )
# 215 "CPar.fsy"
                 : 'gentype_Access));
# 1496 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Access in
            let _3 = parseState.GetInput(3) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 216 "CPar.fsy"
                                                               AccIndex(_1, _3)    
                   )
# 216 "CPar.fsy"
                 : 'gentype_Access));
# 1508 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 220 "CPar.fsy"
                                                               []       
                   )
# 220 "CPar.fsy"
                 : 'gentype_Exprs));
# 1518 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 221 "CPar.fsy"
                                                               _1       
                   )
# 221 "CPar.fsy"
                 : 'gentype_Exprs));
# 1529 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 225 "CPar.fsy"
                                                               [_1]     
                   )
# 225 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1540 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> 'gentype_Expr in
            let _3 = parseState.GetInput(3) :?> 'gentype_Exprs1 in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 226 "CPar.fsy"
                                                               _1 :: _3 
                   )
# 226 "CPar.fsy"
                 : 'gentype_Exprs1));
# 1552 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 230 "CPar.fsy"
                                                               _1       
                   )
# 230 "CPar.fsy"
                 : 'gentype_Const));
# 1563 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> int in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 231 "CPar.fsy"
                                                               - _2     
                   )
# 231 "CPar.fsy"
                 : 'gentype_Const));
# 1574 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 232 "CPar.fsy"
                                                               -1       
                   )
# 232 "CPar.fsy"
                 : 'gentype_Const));
# 1584 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> bool in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 236 "CPar.fsy"
                                                               _1       
                   )
# 236 "CPar.fsy"
                 : 'gentype_Bool));
# 1595 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> string in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 240 "CPar.fsy"
                                                               _1       
                   )
# 240 "CPar.fsy"
                 : 'gentype_String));
# 1606 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> float in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 243 "CPar.fsy"
                                                               _1       
                   )
# 243 "CPar.fsy"
                 : 'gentype_Float));
# 1617 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _2 = parseState.GetInput(2) :?> float in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 244 "CPar.fsy"
                                                               - _2     
                   )
# 244 "CPar.fsy"
                 : 'gentype_Float));
# 1628 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            let _1 = parseState.GetInput(1) :?> char in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 247 "CPar.fsy"
                                                               _1       
                   )
# 247 "CPar.fsy"
                 : 'gentype_Char));
# 1639 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 250 "CPar.fsy"
                                                               TypI     
                   )
# 250 "CPar.fsy"
                 : 'gentype_Type));
# 1649 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 251 "CPar.fsy"
                                                               TypC     
                   )
# 251 "CPar.fsy"
                 : 'gentype_Type));
# 1659 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 252 "CPar.fsy"
                                                               TypB     
                   )
# 252 "CPar.fsy"
                 : 'gentype_Type));
# 1669 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 253 "CPar.fsy"
                                                               TypF     
                   )
# 253 "CPar.fsy"
                 : 'gentype_Type));
# 1679 "CPar.fs"
        (fun (parseState : FSharp.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 254 "CPar.fsy"
                                                               TypS     
                   )
# 254 "CPar.fsy"
                 : 'gentype_Type));
|]
# 1690 "CPar.fs"
let tables : FSharp.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:FSharp.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 62;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = tables.Interpret(lexer, lexbuf, startState)
let Main lexer lexbuf : Absyn.program =
    engine lexer lexbuf 0 :?> _
